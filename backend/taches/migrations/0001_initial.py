# Generated by Django 3.2.25 on 2025-05-03 13:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('status', models.CharField(choices=[('backlog', 'Backlog'), ('todo', 'To Do'), ('inprogress', 'In Progress'), ('inreview', 'In Review'), ('done', 'Done')], default='todo', max_length=20)),
                ('points', models.CharField(choices=[('0', '0'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default='0', max_length=1)),
                ('priority', models.CharField(choices=[('none', 'None'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=20)),
                ('type', models.CharField(choices=[('task', 'Task'), ('bug', 'Bug'), ('feature', 'Feature'), ('improvement', 'Improvement'), ('research', 'Research'), ('testing', 'Testing')], default='task', max_length=20)),
                ('backlogOrder', models.IntegerField(default=0)),
                ('last_edited_at', models.DateTimeField(blank=True, null=True)),
                ('inserted_date', models.DateTimeField(auto_now_add=True)),
                ('branchName', models.CharField(blank=True, max_length=255, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='users.user')),
                ('projectId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='projects.project')),
                ('sprintId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='projects.sprint')),
            ],
        ),
        migrations.CreateModel(
            name='TaskHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_key', models.CharField(blank=True, choices=[('status', 'Status'), ('priority', 'Priority'), ('assignee', 'Assignee'), ('sprintId', 'Sprint ID'), ('type', 'Type'), ('points', 'Points')], max_length=20, null=True)),
                ('property_value', models.CharField(blank=True, max_length=255, null=True)),
                ('old_property_value', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('inserted_date', models.DateTimeField(auto_now_add=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='taches.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_history_entries', to='users.user')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('inserted_date', models.DateTimeField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='taches.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to='users.user')),
            ],
        ),
        migrations.CreateModel(
            name='TaskToView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField()),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='taches.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_views', to='users.user')),
            ],
            options={
                'unique_together': {('task', 'user')},
            },
        ),
    ]
